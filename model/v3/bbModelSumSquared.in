# name of network
addNet bbModelSumSquared

# input groups
addGroup A 1 INPUT
addGroup B 1 INPUT
addGroup C 1 INPUT
addGroup D 1 INPUT
addGroup E 1 INPUT

# output group
addGroup Effect 1 OUTPUT SUM_SQUARED



# connect groups (input -> output)
connectGroups {A B C D E} Effect

# delete bias
deleteGroups bias

# training examples
loadExamples ABCplus.ex
loadExamples ABplus.ex
loadExamples ABminus.ex
loadExamples Aplus.ex
loadExamples Aminus.ex
loadExamples Dplus.ex
loadExamples Dminus.ex
loadExamples Dnothing.ex
loadExamples DEplus.ex
loadExamples DEminus.ex
loadExamples experimentalTest.ex
loadExamples controlTest.ex


# set learning and display parameters
setObj learningRate 0.05
setObj momentum	    0
setObj batchSize    0
setObj numUpdates   50
setObj reportInterval 1
setObj unitCellSize 20
setObj linkCellSize 10
setObj randRange 0
randWeights -r 0
#randWeights -r .001



resetPlot 
plotRow 2 b 6 n Effect 1 
plotRow 2 b 2 n A 4 b 2 n B 4 b 2 n C 4 b 2 n D 4
drawUnits
viewUnits



proc printActivation {group unit} { 
	format "%.3f " [getObj $unit.output] 
} 


proc saveActivations {fname groups} { 
    set outfile [open $fname a] 
    puts $outfile "[getObj currentExample.num] [getObj currentExample.name] " nonewline 
    printUnitValues -$outfile printActivation $groups 
    puts $outfile "\n" nonewline 
    close $outfile 
}

proc testAllFinalActs {fname groups} { 
    resetExampleSet [getObj testingSet.name] 
    set nex [getObj testingSet.numExamples] 
    for {set i 0} {$i < $nex} {incr i} {
	doExample -set [getObj testingSet.name]
	saveActivations $fname $groups
    }
}


proc testNetwork {n train trainNum train2 trainNum2 test fname groups} {
	for {set i 0} {$i < $n} {incr i} {
			resetNet
			useTrainingSet $train
			train $trainNum
			useTrainingSet $train2
			train $trainNum2
			useTestingSet $test
			testAllFinalActs $fname $groups
	}
}


# BB experimental: testNetwork 16 ABCplus 100 Aplus 100 ABCplus 100 Aplus 100 experimentalTest BBexperimentalExp1.txt Effect

# BB control: testNetwork 16 ABCplus 100 Dplus 100 ABCplus 100 Dplus 100 controlTest BBcontrolExp1.txt Effect

# ISO experimental: testNetwork 16 ABCplus 100 Aminus 100 ABCplus 100 Aminus 100 experimentalTest ISOexperimentalExp1.txt Effect

# ISO control: testNetwork 16 ABCplus 100 Dminus 100 ABCplus 100 Dminus 100 controlTest ISOcontrolExp1.txt Effect


#testNetwork 1000 ABCplus 50 Aplus 50 experimentalTest BBexperimental.txt Effect
#testNetwork 1000 ABCplus 50 Dplus 50 controlTest BBcontrol.txt Effect
#testNetwork 1000 ABCplus 50 Aminus 50 experimentalTest ISOexperimental.txt Effect
#testNetwork 1000 ABCplus 50 Dminus 50 controlTest ISOcontrol.txt Effect