D_tall$choices[i]=NA
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.numeric(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "Backwards Blocking", "1"="Indirect Screening-Off"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
dim(D_tall)
D_tall = as.data.frame(D_tall[,c(1:4,6:7,5,10:13,8:9)])
fix(D_tall)
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
B.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"])-2
length(B.BB.MAIN.SUM)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
C.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"])-2
length(C.BB.MAIN.SUM)
mean(C.BB.MAIN.SUM, na.rm=TRUE)
# BB CONTROL
A.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"])-2
length(A.BB.CONTROL.SUM)
mean(A.BB.CONTROL.SUM, na.rm=TRUE)
B.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"])-2
length(B.BB.CONTROL.SUM)
mean(B.BB.CONTROL.SUM, na.rm=TRUE)
C.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"])-2
length(C.BB.CONTROL.SUM)
mean(C.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"])-2
length(D.BB.CONTROL.SUM)
mean(D.BB.CONTROL.SUM, na.rm=TRUE)
# Combined dataframe
D.BB.DF = data.frame(ID = c(1:31), Condition = rep(c("Backwards Blocking"),31),
A.BB.MAIN.SUM = A.BB.MAIN.SUM,
B.BB.MAIN.SUM = B.BB.MAIN.SUM,
C.BB.MAIN.SUM = C.BB.MAIN.SUM,
A.BB.CONTROL.SUM = A.BB.CONTROL.SUM,
B.BB.CONTROL.SUM = B.BB.CONTROL.SUM,
C.BB.CONTROL.SUM = C.BB.CONTROL.SUM,
D.BB.CONTROL.SUM = D.BB.CONTROL.SUM)
names(D.BB.DF)
dim(D.BB.DF)
D.BB.DF_tall = reshape(D.BB.DF, varying = c(3:9), v.names = "measure",
timevar = "condition",   direction = "long")
D.BB.DF_tall = D.BB.DF_tall[order(D.BB.DF_tall$ID),]
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 31)
D.BB.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 31)
names(D.BB.DF_tall)
D.BB.DF_tall$id = NULL
D.BB.DF_tall$condition = NULL
names(D.BB.DF_tall)
dim(D.BB.DF_tall)
D.BB.DF_tall = D.BB.DF_tall[,c(1:2,5,4,3)]
names(D.BB.DF_tall)
D.BB.DF_tall$objects = factor(D.BB.DF_tall$objects)
D.BB.DF_tall$eventType = factor(D.BB.DF_tall$eventType)
D.BB.DF_tall$Condition = factor(D.BB.DF_tall$Condition)
fix(D.BB.DF_tall)
# ISO MAIN
A.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])-2
length(A.ISO.MAIN.SUM)
mean(A.ISO.MAIN.SUM, na.rm=TRUE)
B.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"])-2
length(B.ISO.MAIN.SUM)
mean(B.ISO.MAIN.SUM, na.rm=TRUE)
C.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"])-2
length(C.ISO.MAIN.SUM)
mean(C.ISO.MAIN.SUM, na.rm=TRUE)
# ISO CONTROL
A.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"])-2
length(A.ISO.CONTROL.SUM)
mean(A.ISO.CONTROL.SUM, na.rm=TRUE)
B.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"])-2
length(B.ISO.CONTROL.SUM)
mean(B.ISO.CONTROL.SUM, na.rm=TRUE)
C.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"])-2
length(C.ISO.CONTROL.SUM)
mean(C.ISO.CONTROL.SUM, na.rm=TRUE)
D.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"])-2
length(D.ISO.CONTROL.SUM)
mean(D.ISO.CONTROL.SUM, na.rm=TRUE)
# Combined dataframe
D.ISO.DF = data.frame(ID = c(1:33), Condition = rep(c("Indirect Screening-Off"),33),
A.ISO.MAIN.SUM = A.ISO.MAIN.SUM,
B.ISO.MAIN.SUM = B.ISO.MAIN.SUM,
C.ISO.MAIN.SUM = C.ISO.MAIN.SUM,
A.ISO.CONTROL.SUM = A.ISO.CONTROL.SUM,
B.ISO.CONTROL.SUM = B.ISO.CONTROL.SUM,
C.ISO.CONTROL.SUM = C.ISO.CONTROL.SUM,
D.ISO.CONTROL.SUM = D.ISO.CONTROL.SUM)
names(D.ISO.DF)
dim(D.ISO.DF)
D.ISO.DF_tall = reshape(D.ISO.DF, varying = c(3:9), v.names = "measure",
timevar = "condition",   direction = "long")
D.ISO.DF_tall = D.ISO.DF_tall[order(D.ISO.DF_tall$ID),]
D.ISO.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 33)
D.ISO.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 33)
names(D.ISO.DF_tall)
D.ISO.DF_tall$id = NULL
D.ISO.DF_tall$condition = NULL
names(D.ISO.DF_tall)
dim(D.ISO.DF_tall)
D.ISO.DF_tall = D.ISO.DF_tall[,c(1:2,5,4,3)]
names(D.ISO.DF_tall)
D.ISO.DF_tall$objects = factor(D.ISO.DF_tall$objects)
D.ISO.DF_tall$eventType = factor(D.ISO.DF_tall$eventType)
D.ISO.DF_tall$Condition = factor(D.ISO.DF_tall$Condition)
fix(D.ISO.DF_tall)
##################################################################
##################################################################
###                                                            ###
### COMBINE THE DATA FOR CHILDREN IN THE BB AND ISO CONDITIONS ###
###                                                            ###
##################################################################
##################################################################
# Combine the BB and ISO dataframes
D_tall_new = rbind(D.BB.DF_tall, D.ISO.DF_tall)
D_tall_new$ID = rep(c(1:64),each=7)
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
names(D)
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
dim(D)
names(D)
D_tall =  reshape(D, varying = c(10:23), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),]
names(D_tall)
D_tall$id = NULL
names(D_tall)
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 64)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 64)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 64)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 64)
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# remove more unnecessary columns
names(D_tall)
D_tall$CONDITION = NULL
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]=1
} else if(D_tall$choice[i]==0){
D_tall$choices[i]=0
} else {
D_tall$choices[i]=NA
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.numeric(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "Backwards Blocking", "1"="Indirect Screening-Off"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
dim(D_tall)
D_tall = as.data.frame(D_tall[,c(1:4,6:7,5,10:13,8:9)])
fix(D_tall)
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])
mean(as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]))
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
B.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"])
length(B.BB.MAIN.SUM)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
B.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"])
length(B.BB.MAIN.SUM)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
C.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"])
length(C.BB.MAIN.SUM)
mean(C.BB.MAIN.SUM, na.rm=TRUE)
# BB CONTROL
A.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"])
length(A.BB.CONTROL.SUM)
mean(A.BB.CONTROL.SUM, na.rm=TRUE)
B.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"])
length(B.BB.CONTROL.SUM)
mean(B.BB.CONTROL.SUM, na.rm=TRUE)
C.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"])
length(C.BB.CONTROL.SUM)
mean(C.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="Backwards Blocking" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"])
length(D.BB.CONTROL.SUM)
mean(D.BB.CONTROL.SUM, na.rm=TRUE)
# Combined dataframe
D.BB.DF = data.frame(ID = c(1:31), Condition = rep(c("Backwards Blocking"),31),
A.BB.MAIN.SUM = A.BB.MAIN.SUM,
B.BB.MAIN.SUM = B.BB.MAIN.SUM,
C.BB.MAIN.SUM = C.BB.MAIN.SUM,
A.BB.CONTROL.SUM = A.BB.CONTROL.SUM,
B.BB.CONTROL.SUM = B.BB.CONTROL.SUM,
C.BB.CONTROL.SUM = C.BB.CONTROL.SUM,
D.BB.CONTROL.SUM = D.BB.CONTROL.SUM)
names(D.BB.DF)
dim(D.BB.DF)
D.BB.DF_tall = reshape(D.BB.DF, varying = c(3:9), v.names = "measure",
timevar = "condition",   direction = "long")
D.BB.DF_tall = D.BB.DF_tall[order(D.BB.DF_tall$ID),]
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 31)
D.BB.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 31)
names(D.BB.DF_tall)
D.BB.DF_tall$id = NULL
D.BB.DF_tall$condition = NULL
names(D.BB.DF_tall)
dim(D.BB.DF_tall)
D.BB.DF_tall = D.BB.DF_tall[,c(1:2,5,4,3)]
names(D.BB.DF_tall)
D.BB.DF_tall$objects = factor(D.BB.DF_tall$objects)
D.BB.DF_tall$eventType = factor(D.BB.DF_tall$eventType)
D.BB.DF_tall$Condition = factor(D.BB.DF_tall$Condition)
fix(D.BB.DF_tall)
# ISO MAIN
A.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])
length(A.ISO.MAIN.SUM)
mean(A.ISO.MAIN.SUM, na.rm=TRUE)
B.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"])
length(B.ISO.MAIN.SUM)
mean(B.ISO.MAIN.SUM, na.rm=TRUE)
C.ISO.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"])
length(C.ISO.MAIN.SUM)
mean(C.ISO.MAIN.SUM, na.rm=TRUE)
# ISO CONTROL
A.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"])
length(A.ISO.CONTROL.SUM)
mean(A.ISO.CONTROL.SUM, na.rm=TRUE)
B.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"])
length(B.ISO.CONTROL.SUM)
mean(B.ISO.CONTROL.SUM, na.rm=TRUE)
C.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"])
length(C.ISO.CONTROL.SUM)
mean(C.ISO.CONTROL.SUM, na.rm=TRUE)
D.ISO.CONTROL.SUM = as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="Indirect Screening-Off" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"])
length(D.ISO.CONTROL.SUM)
mean(D.ISO.CONTROL.SUM, na.rm=TRUE)
# Combined dataframe
D.ISO.DF = data.frame(ID = c(1:33), Condition = rep(c("Indirect Screening-Off"),33),
A.ISO.MAIN.SUM = A.ISO.MAIN.SUM,
B.ISO.MAIN.SUM = B.ISO.MAIN.SUM,
C.ISO.MAIN.SUM = C.ISO.MAIN.SUM,
A.ISO.CONTROL.SUM = A.ISO.CONTROL.SUM,
B.ISO.CONTROL.SUM = B.ISO.CONTROL.SUM,
C.ISO.CONTROL.SUM = C.ISO.CONTROL.SUM,
D.ISO.CONTROL.SUM = D.ISO.CONTROL.SUM)
names(D.ISO.DF)
dim(D.ISO.DF)
D.ISO.DF_tall = reshape(D.ISO.DF, varying = c(3:9), v.names = "measure",
timevar = "condition",   direction = "long")
D.ISO.DF_tall = D.ISO.DF_tall[order(D.ISO.DF_tall$ID),]
D.ISO.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 33)
D.ISO.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 33)
names(D.ISO.DF_tall)
D.ISO.DF_tall$id = NULL
D.ISO.DF_tall$condition = NULL
names(D.ISO.DF_tall)
dim(D.ISO.DF_tall)
D.ISO.DF_tall = D.ISO.DF_tall[,c(1:2,5,4,3)]
names(D.ISO.DF_tall)
D.ISO.DF_tall$objects = factor(D.ISO.DF_tall$objects)
D.ISO.DF_tall$eventType = factor(D.ISO.DF_tall$eventType)
D.ISO.DF_tall$Condition = factor(D.ISO.DF_tall$Condition)
fix(D.ISO.DF_tall)
##################################################################
##################################################################
###                                                            ###
### COMBINE THE DATA FOR CHILDREN IN THE BB AND ISO CONDITIONS ###
###                                                            ###
##################################################################
##################################################################
# Combine the BB and ISO dataframes
D_tall_new = rbind(D.BB.DF_tall, D.ISO.DF_tall)
D_tall_new$ID = rep(c(1:64),each=7)
A.BB.MAIN.SUM = as.numeric(D_tall_new$choice[D_tall_new$Condition=="BB" & D_tall_new$phaseOrder == "Phase 1" & D_tall_new$trialType=="main" & D_tall_new$objectType=="A"])+
as.numeric(D_tall_new$choice[D_tall_new$Condition=="BB" & D_tall_new$phaseOrder=="Phase 2" & D_tall_new$trialType=="main" & D_tall_new$objectType=="A"])-2
mean(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
as.numeric(D_tall_new$choice[D_tall_new$Condition=="BB" & D_tall_new$phaseOrder == "Phase 1" & D_tall_new$trialType=="main" & D_tall_new$objectType=="A"])+
as.numeric(D_tall_new$choice[D_tall_new$Condition=="BB" & D_tall_new$phaseOrder=="Phase 2" & D_tall_new$trialType=="main" & D_tall_new$objectType=="A"])
fix(D_tall_new)
mean(D_tall_new$measure, na.rm=TRUE)
names(D_tall_new)
fix(D_tall_new)
# behavioral predictions
#BB
A.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"])
mean(A.BB.MAIN.SUM)
A.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"])
mean(A.ISO.MAIN.SUM)
A.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"])
mean(A.ISO.CONTROL.SUM)
mean(A.ISO.CONTROL.SUM, na.rm=TRUE)
D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"]
#ISO
A.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="C"], na.rm=TRUE)
A.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="C"], na.rm=TRUE)
D.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="D"], na.rm=TRUE)
A.ISO.MAIN.SUM
A.ISO.CONTROL.SUM
D.ISO.CONTROL.SUM
A.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"])
B.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="B"])
C.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="C"])
A.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"])
B.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"])
C.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="C"])
D.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="D"])
#ISO
A.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="C"], na.rm=TRUE)
A.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="C"], na.rm=TRUE)
D.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="D"], na.rm=TRUE)
A.BB.MAIN.SUM
D.BB.CONTROL.SUM
B.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"])
C.BB.CONTROL.SUM
behavioral_predictions = c(A.BB.MAIN.SUM, B.BB.MAIN.SUM, C.BB.MAIN.SUM, A.BB.CONTROL.SUM, B.BB.CONTROL.SUM, C.BB.CONTROL.SUM, D.BB.CONTROL.SUM,
A.ISO.MAIN.SUM, B.ISO.MAIN.SUM, C.ISO.MAIN.SUM, A.ISO.CONTROL.SUM, B.ISO.CONTROL.SUM, C.ISO.CONTROL.SUM, D.ISO.CONTROL.SUM)
model_predictions = c(1, 0.5, 0.5, 0.57, 0.57, 0.57, 1,
0, 0.67, 0.67, 0.57, 0.57, 0.57, 0)
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
behavioral_predictions = c(A.BB.MAIN.SUM, B.BB.MAIN.SUM, C.BB.MAIN.SUM, A.BB.CONTROL.SUM, B.BB.CONTROL.SUM, C.BB.CONTROL.SUM, D.BB.CONTROL.SUM,
A.ISO.MAIN.SUM, B.ISO.MAIN.SUM, C.ISO.MAIN.SUM, A.ISO.CONTROL.SUM, B.ISO.CONTROL.SUM, C.ISO.CONTROL.SUM, D.ISO.CONTROL.SUM)
behavioral_predictions
A.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"], na.rm=TRUE)
B.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="B"], na.rm=TRUE)
C.BB.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="main" & D_tall_new$objects=="C"], na.rm=TRUE)
A.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"], na.rm=TRUE)
B.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"], na.rm=TRUE)
C.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="C"], na.rm=TRUE)
D.BB.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Backwards Blocking" & D_tall_new$eventType=="control" & D_tall_new$objects=="D"], na.rm=TRUE)
#ISO
A.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.MAIN.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="main" & D_tall_new$objects=="C"], na.rm=TRUE)
A.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="A"], na.rm=TRUE)
B.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="B"], na.rm=TRUE)
C.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="C"], na.rm=TRUE)
D.ISO.CONTROL.SUM = mean(D_tall_new$measure[D_tall_new$Condition=="Indirect Screening-Off" & D_tall_new$eventType=="control" & D_tall_new$objects=="D"], na.rm=TRUE)
# behavioral predictions
behavioral_predictions = c(A.BB.MAIN.SUM, B.BB.MAIN.SUM, C.BB.MAIN.SUM, A.BB.CONTROL.SUM, B.BB.CONTROL.SUM, C.BB.CONTROL.SUM, D.BB.CONTROL.SUM,
A.ISO.MAIN.SUM, B.ISO.MAIN.SUM, C.ISO.MAIN.SUM, A.ISO.CONTROL.SUM, B.ISO.CONTROL.SUM, C.ISO.CONTROL.SUM, D.ISO.CONTROL.SUM)
model_predictions = c(1, 0.5, 0.5, 0.57, 0.57, 0.57, 1,
0, 0.67, 0.67, 0.57, 0.57, 0.57, 0)
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
bayes_model_func(x=3,0.65,event1=c(1,1,1,1),event2=c(1,0,0,1))
bayes_model_func(x=4,0.65,event1=c(1,1,1,0,1),event2=c(0,0,0,1,1))
bayes_model_func(x=3,0.65,event1=c(1,1,1,1),event2=c(1,0,0,0))
bayes_model_func(x=4,0.65,event1=c(1,1,1,0,1),event2=c(0,0,0,1,0))
model_predictions = c(1, 0.65, 0.65, 0.68, 0.68, 0.68, 1,
0, 0.74, 0.74, 0.68, 0.68, 0.68, 0)
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
bayes_model_func(x=3,0.80,event1=c(1,1,1,1),event2=c(1,0,0,1))
bayes_model_func(x=4,0.80,event1=c(1,1,1,0,1),event2=c(0,0,0,1,1))
bayes_model_func(x=3,0.80,event1=c(1,1,1,1),event2=c(1,0,0,0))
bayes_model_func(x=4,0.80,event1=c(1,1,1,0,1),event2=c(0,0,0,1,0))
model_predictions = c(1, 0.80, 0.80, 0.81, 0.81, 0.81, 1,
0, 0.83, 0.83, 0.81, 0.81, 0.81, 0)
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
c(1, 0.5, 0.5, 0.57, 0.57, 0.57, 1,
0, 0.67, 0.67, 0.57, 0.57, 0.57, 0)*2
model_predictions = c(1, 0.65, 0.65, 0.68, 0.68, 0.68, 1,
0, 0.74, 0.74, 0.68, 0.68, 0.68, 0)*2
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
model_predictions = c(1, 0.80, 0.80, 0.81, 0.81, 0.81, 1,
0, 0.83, 0.83, 0.81, 0.81, 0.81, 0)*2
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
bayes_model_func(x=3,0.95,event1=c(1,1,1,1),event2=c(1,0,0,1))
bayes_model_func(x=4,0.95,event1=c(1,1,1,0,1),event2=c(0,0,0,1,1))
bayes_model_func(x=3,0.95,event1=c(1,1,1,1),event2=c(1,0,0,0))
bayes_model_func(x=4,0.95,event1=c(1,1,1,0,1),event2=c(0,0,0,1,0))
# .95
model_predictions = c(1, 0.95, 0.95, 0.95, 0.95, 0.95, 1,
0, 0.95, 0.95, 0.95, 0.95, 0.95, 0)*2
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
model_predictions = c(1, 1, 1, 1, 1, 1, 1,
0, 1, 1, 1, 1, 1, 0)*2
#####################
# model fit indices #
#####################
caret::postResample(model_predictions, behavioral_predictions)
