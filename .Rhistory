# remove unnecessary columns
names(D)
# add new columns
D$ID = rep(c(1:256), each = 14)
# convert variables that should be factors into factors
D$objects = factor(D$objects)
D$subcondition = factor(D$subcondition)
D$condition = factor(D$condition)
D$trialType = factor(D$trialType)
condition_barplot = ggplot(D, aes(condition, ratings, fill=objects)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Ratings") + # change the label of the y-axis
facet_wrap(~trialType, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values=c("#000000",
"#888888",
"#C8C8C8",
"#696969")) +
coord_cartesian(ylim=c(0, 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
rm(list=ls())
################################
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
# MODIFY CHOICES COLUMN
# Deal with "unsures" in the choice column
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]=1
} else if(D_tall$choice[i]==0){
D_tall$choices[i]=0
} else {
D_tall$choices[i]=NA
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_5yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_5yos = subset(D_tall, ! Age %in% c("4","6"))
D_tall_Exp1_5yos$Age = factor(D_tall_Exp1_5yos$Age)
D_tall_Exp1_5yos$Experiment = factor(D_tall_Exp1_5yos$Experiment)
dim(D_tall_Exp1_5yos)
D_tall_Exp1_5yos = D_tall_Exp1_5yos[1:518,]
# get the number of participants in each condition
table(D_tall_Exp1_5yos$Condition)/14
# BB MAIN
A.BB.MAIN.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="A"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
B.BB.MAIN.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="B"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="B"])-2
length(B.BB.MAIN.SUM)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
C.BB.MAIN.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="C"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="main" & D_tall_Exp1_5yos$objectType=="C"])-2
length(C.BB.MAIN.SUM)
mean(C.BB.MAIN.SUM, na.rm=TRUE)
# BB CONTROL
A.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="A"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="A"])-2
length(A.BB.CONTROL.SUM)
mean(A.BB.CONTROL.SUM, na.rm=TRUE)
B.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="B"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="B"])-2
length(B.BB.CONTROL.SUM)
mean(B.BB.CONTROL.SUM, na.rm=TRUE)
C.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="C"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="C"])-2
length(C.BB.CONTROL.SUM)
mean(C.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder == "Phase 1" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="D"])+
as.numeric(D_tall_Exp1_5yos$choice[D_tall_Exp1_5yos$Condition=="BB" & D_tall_Exp1_5yos$phaseOrder=="Phase 2" & D_tall_Exp1_5yos$trialType=="control" & D_tall_Exp1_5yos$objectType=="D"])-2
length(D.BB.CONTROL.SUM)
mean(D.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.DF = data.frame(ID = c(1:32),
A.BB.MAIN.SUM = A.BB.MAIN.SUM,
B.BB.MAIN.SUM = B.BB.MAIN.SUM,
C.BB.MAIN.SUM = C.BB.MAIN.SUM,
A.BB.CONTROL.SUM = A.BB.CONTROL.SUM,
B.BB.CONTROL.SUM = B.BB.CONTROL.SUM,
C.BB.CONTROL.SUM = C.BB.CONTROL.SUM,
D.BB.CONTROL.SUM = D.BB.CONTROL.SUM)
names(D.BB.DF)
D.BB.DF_tall = reshape(D.BB.DF, varying = c(2:8), v.names = "measure",
timevar = "condition",   direction = "long")
D.BB.DF_tall = D.BB.DF_tall[order(D.BB.DF_tall$ID),]
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 32)
D.BB.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 32)
names(D.BB.DF_tall)
D.BB.DF_tall$id = NULL
D.BB.DF_tall$condition = NULL
names(D.BB.DF_tall)
D.BB.DF_tall = D.BB.DF_tall[,c(1,3:4,2)]
condition_barplot = ggplot(D.BB.DF_tall, aes(eventType, measure, fill = objects)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
t.test(A.BB.MAIN.SUM,
B.BB.MAIN.SUM, paired=TRUE, alternative="two.sided")
t.test(B.BB.MAIN.SUM,
B.BB.CONTROL.SUM, paired=TRUE, alternative="two.sided")
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
# MODIFY CHOICES COLUMN
# Deal with "unsures" in the choice column
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]=1
} else if(D_tall$choice[i]==0){
D_tall$choices[i]=0
} else {
D_tall$choices[i]=NA
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_6yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_6yos = subset(D_tall, ! Age %in% c("4"))
D_tall_Exp1_6yos$Age = factor(D_tall_Exp1_6yos$Age)
D_tall_Exp1_6yos$Experiment = factor(D_tall_Exp1_6yos$Experiment)
dim(D_tall_Exp1_6yos)
fix(D_tall_Exp1_6yos)
D_tall_Exp1_6yos = D_tall_Exp1_6yos[1:1204,]
# get the number of participants in each condition
table(D_tall_Exp1_6yos$Condition)/14
# BB MAIN
A.BB.MAIN.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
B.BB.MAIN.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="B"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="B"])-2
length(B.BB.MAIN.SUM)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
C.BB.MAIN.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="C"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="C"])-2
length(C.BB.MAIN.SUM)
mean(C.BB.MAIN.SUM, na.rm=TRUE)
# BB CONTROL
A.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="A"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="A"])-2
length(A.BB.CONTROL.SUM)
mean(A.BB.CONTROL.SUM, na.rm=TRUE)
B.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="B"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="B"])-2
length(B.BB.CONTROL.SUM)
mean(B.BB.CONTROL.SUM, na.rm=TRUE)
C.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="C"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="C"])-2
length(C.BB.CONTROL.SUM)
mean(C.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.CONTROL.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="D"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="control" & D_tall_Exp1_6yos$objectType=="D"])-2
length(D.BB.CONTROL.SUM)
mean(D.BB.CONTROL.SUM, na.rm=TRUE)
A.ISO.MAIN.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="ISO" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="ISO" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])-2
length(A.ISO.MAIN.SUM)
# BB MAIN
A.BB.MAIN.SUM = as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder == "Phase 1" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])+
as.numeric(D_tall_Exp1_6yos$choice[D_tall_Exp1_6yos$Condition=="BB" & D_tall_Exp1_6yos$phaseOrder=="Phase 2" & D_tall_Exp1_6yos$trialType=="main" & D_tall_Exp1_6yos$objectType=="A"])-2
length(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
D.BB.DF_tall = reshape(D.BB.DF, varying = c(2:8), v.names = "measure",
timevar = "condition",   direction = "long")
D.BB.DF_tall = D.BB.DF_tall[order(D.BB.DF_tall$ID),]
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 56)
length(A.BB.MAIN.SUM)
D.BB.DF = data.frame(ID = c(1:56),
A.BB.MAIN.SUM = A.BB.MAIN.SUM,
B.BB.MAIN.SUM = B.BB.MAIN.SUM,
C.BB.MAIN.SUM = C.BB.MAIN.SUM,
A.BB.CONTROL.SUM = A.BB.CONTROL.SUM,
B.BB.CONTROL.SUM = B.BB.CONTROL.SUM,
C.BB.CONTROL.SUM = C.BB.CONTROL.SUM,
D.BB.CONTROL.SUM = D.BB.CONTROL.SUM)
names(D.BB.DF)
D.BB.DF_tall = reshape(D.BB.DF, varying = c(2:8), v.names = "measure",
timevar = "condition",   direction = "long")
D.BB.DF_tall = D.BB.DF_tall[order(D.BB.DF_tall$ID),]
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 56)
D.BB.DF_tall$objects = rep(c("A","B","C","A","B","C","D"), times = 56)
D.BB.DF_tall$eventType = rep(c("main","main","main",
"control","control","control","control"), times = 56)
names(D.BB.DF_tall)
D.BB.DF_tall$id = NULL
D.BB.DF_tall$condition = NULL
names(D.BB.DF_tall)
names(D.BB.DF_tall)
D.BB.DF_tall = D.BB.DF_tall[,c(1,3:4,2)]
#BB
condition_barplot = ggplot(D.BB.DF_tall, aes(eventType, measure, fill = objects)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
# MODIFY CHOICES COLUMN
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]=1
} else if(D_tall$choice[i]==0){
D_tall$choices[i]=0
} else {
D_tall$choices[i]="Unsure"
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_6yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_6yos = subset(D_tall, ! Age %in% c("4","5"))
D_tall_Exp1_6yos$Age = factor(D_tall_Exp1_6yos$Age)
D_tall_Exp1_6yos$Experiment = factor(D_tall_Exp1_6yos$Experiment)
dim(D_tall_Exp1_6yos)
D_tall_Exp1_6yos = D_tall_Exp1_6yos[1:518,]
# get the number of participants in each condition
table(D_tall_Exp1_6yos$Condition)/14
D_tall_Exp1_6yos_complete=D_tall_Exp1_6yos[complete.cases(D_tall_Exp1_6yos), ]
ggplot(data = D_tall_Exp1_6yos_complete) + geom_bar(mapping = aes(x=choice, color = Condition, fill = objectType),
stat="count", position = "dodge",  na.rm = TRUE) + facet_wrap(~trialType)
D_tall_Exp1_6yos_obj_A_D = subset(D_tall_Exp1_6yos, ! objectType %in% c("B","C"))
D_tall_Exp1_6yos_obj_A_D$objectType = factor(D_tall_Exp1_6yos_obj_A_D$objectType)
xtabs(~choice+objectType, data=D_tall_Exp1_6yos_obj_A_D)
BB.5.A.D.glm = glm(choice[D_tall_Exp1_6yos_obj_A_D$Condition=="BB"]~objectType[D_tall_Exp1_6yos_obj_A_D$Condition=="BB"],
data=D_tall_Exp1_6yos_obj_A_D,
family=binomial, subset = (choice != "Unsure"))
summary(BB.5.A.D.glm)
exp(BB.5.A.D.glm$coefficients[[2]])
D_tall_Exp1_6yos_obj_A_B = subset(D_tall_Exp1_6yos, ! objectType %in% c("C","D"))
D_tall_Exp1_6yos_obj_A_B$objectType = factor(D_tall_Exp1_6yos_obj_A_B$objectType)
xtabs(~choice+objectType, data=D_tall_Exp1_6yos_obj_A_B)
D_tall_Exp1_6yos_obj_A_B = subset(D_tall_Exp1_6yos, ! objectType %in% c("C","D"))
D_tall_Exp1_6yos_obj_A_B$objectType = factor(D_tall_Exp1_6yos_obj_A_B$objectType)
xtabs(~choice+objectType, data=D_tall_Exp1_6yos_obj_A_B)
BB.5.A.D.glm = glm(choice[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"]~objectType[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"],
data=D_tall_Exp1_6yos_obj_A_B,
family=binomial, subset = (choice != "Unsure"))
summary(BB.5.A..glm)
xtabs(~choice+objectType, data=D_tall_Exp1_6yos_obj_A_B)
BB.5.A.B.glm = glm(choice[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"]~objectType[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"],
data=D_tall_Exp1_6yos_obj_A_B,
family=binomial, subset = (choice != "Unsure"))
summary(BB.5.A..glm)
xtabs(~choice+objectType, data=D_tall_Exp1_6yos_obj_A_B)
BB.5.A.B.glm = glm(choice[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"]~objectType[D_tall_Exp1_6yos_obj_A_B$Condition=="BB"],
data=D_tall_Exp1_6yos_obj_A_B,
family=binomial, subset = (choice != "Unsure"))
summary(BB.5.A.B.glm)
exp(BB.5.A.B.glm$coefficients[[2]])
