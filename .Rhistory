<<<<<<< HEAD
=======
exp(BB.IS.5.B..main.glm.passers$coefficients[[2]])
BB.IS.5.C.main.glm.passers = glm(choice[D_tall_Exp1_6yos_obj_C_BB_ISO$trialType=="main"]~Condition[D_tall_Exp1_6yos_obj_C_BB_ISO$trialType=="main"], data=D_tall_Exp1_6yos_obj_C_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
summary(BB.IS.5.C.main.glm.passers)
BB.IS.5.B..main.glm.passers = glm(choice[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="main"]~Condition[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="main"], data=D_tall_Exp1_6yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
summary(BB.IS.5.B..main.glm.passers)
exp(BB.IS.5.B..main.glm.passers$coefficients[[2]])
BB.IS.5.B.control.glm.passers = glm(choice[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="main"]~Condition[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="control"], data=D_tall_Exp1_6yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
summary(BB.IS.5.B.control.glm.passers)
exp(BB.IS.5.B.control.glm.passers$coefficients[[2]])
BB.IS.5.B.control.glm.passers = glm(choice[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="control"]~Condition[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="control"], data=D_tall_Exp1_6yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
summary(BB.IS.5.B.control.glm.passers)
exp(BB.IS.5.B.control.glm.passers$coefficients[[2]])
alt.glm = glm(choice[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="main"]~Condition[D_tall_Exp1_6yos_obj_B_BB_ISO$trialType=="main"], data=D_tall_Exp1_6yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
alt.glm.BIC = BIC(alt.glm)
control.glm = glm(choice[D_tall_Exp1_6yos_obj_A$trialType=="main"]~1, data=D_tall_Exp1_6yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
control.glm.BIC = BIC(control.glm)
BF01 = exp((alt.glm.BIC - control.glm.BIC)/2)
BF10 = 1/BF01
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
BF10
alt.glm = glm(choice[D_tall_Exp1_5yos_obj_B_BB_ISO$trialType=="control"]~Condition[D_tall_Exp1_5yos_obj_B_BB_ISO$trialType=="control"], data=D_tall_Exp1_5yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
alt.glm.BIC = BIC(alt.glm)
control.glm = glm(choice[D_tall_Exp1_5yos_obj_B_BB_ISO$trialType=="control"]~1, data=D_tall_Exp1_5yos_obj_B_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
control.glm.BIC = BIC(control.glm)
BF01 = exp((alt.glm.BIC - control.glm.BIC)/2)
BF10 = 1/BF01
BF10
alt.glm = glm(choice[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="main"]~Condition[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="main"], data=D_tall_Exp1_5yos_obj_C_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
alt.glm.BIC = BIC(alt.glm)
control.glm = glm(choice[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="main"]~1, data=D_tall_Exp1_5yos_obj_C_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
control.glm.BIC = BIC(control.glm)
BF01 = exp((alt.glm.BIC - control.glm.BIC)/2)
BF10 = 1/BF01
BF10
alt.glm = glm(choice[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="control"]~Condition[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="control"], data=D_tall_Exp1_5yos_obj_C_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
alt.glm.BIC = BIC(alt.glm)
control.glm = glm(choice[D_tall_Exp1_5yos_obj_C_BB_ISO$trialType=="control"]~1, data=D_tall_Exp1_5yos_obj_C_BB_ISO,
family=binomial, subset = (choice != "Unsure"))
control.glm.BIC = BIC(control.glm)
BF01 = exp((alt.glm.BIC - control.glm.BIC)/2)
BF10 = 1/BF01
BF10
# LOAD ALL RELEVANT LIBRARIES:
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
D$CTRL_1_A + D$CTRL_2_A
D$A.CTRL.SUM = D$CTRL_1_A + D$CTRL_2_A
D$B.CTRL.SUM = D$CTRL_1_B + D$CTRL_2_B
D$C.CTRL.SUM = D$CTRL_1_C + D$CTRL_2_C
D$D.CTRL.SUM = D$CTRL_1_D + D$CTRL_2_D
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
D$MAIN_1_C + D$MAIN_2_C
D$MAIN_2_C
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$MAIN_1_C + D$MAIN_2_C
names(D)
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2__C
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2__C
D$A.CTRL.SUM = D$CTRL_1_A + D$CTRL_2_A
D$B.CTRL.SUM = D$CTRL_1_B + D$CTRL_2_B
D$C.CTRL.SUM = D$CTRL_1_C + D$CTRL_2_C
D$D.CTRL.SUM = D$CTRL_1_D + D$CTRL_2_D
names(D)
dim(D)
D_tall =  reshape(D, varying = c(23:29), v.names = "measure",
timevar = "condition",   direction = "long")
fix(D_tall)
for(i in 1:nrow(D)){
for(j in 1:ncol(D)){
if(is.na(D[[i,j]]=="NaN")){
D[[i,j]] = NA
} else if(D[[i,j]]=="N/A"){
D[[i,j]] = NA
} else if(D[[i,j]]==2){
D[[i,j]] = NA
} else {
D[[i,j]] = D[[i,j]]
}
}
}
fix(D)
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2__C
D$A.CTRL.SUM = D$CTRL_1_A + D$CTRL_2_A
D$B.CTRL.SUM = D$CTRL_1_B + D$CTRL_2_B
D$C.CTRL.SUM = D$CTRL_1_C + D$CTRL_2_C
D$D.CTRL.SUM = D$CTRL_1_D + D$CTRL_2_D
# reshape from 'wide' to 'long'
D_tall =  reshape(D, varying = c(23:29), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),]
dim(D_tall)
fix(D_tall)
names(D)
# remove unnecessary D columns
D = D[,-c(9:22)]
names(D)
dim(D)
# reshape from 'wide' to 'long'
D_tall =  reshape(D, varying = c(9:15), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),]
fix(D_tall)
fix(D)
# LOAD ALL RELEVANT LIBRARIES:
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
for(i in 1:nrow(D)){
for(j in 1:ncol(D)){
if(is.na(D[[i,j]]=="NaN")){
D[[i,j]] = NA
} else if(D[[i,j]]=="N/A"){
D[[i,j]] = NA
} else if(D[[i,j]]==2){
D[[i,j]] = NA
} else {
D[[i,j]] = D[[i,j]]
}
}
}
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),]
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
# MODIFY CHOICES COLUMN
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]="Yes"
} else if(D_tall$choice[i]==0){
D_tall$choices[i]="No"
} else {
D_tall$choices[i]="Unsure"
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_6yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_6yos = subset(D_tall, ! Age %in% c("4","5"))
D_tall_Exp1_6yos$Age = factor(D_tall_Exp1_6yos$Age)
D_tall_Exp1_6yos$Experiment = factor(D_tall_Exp1_6yos$Experiment)
dim(D_tall_Exp1_6yos)
D_tall_Exp1_6yos = D_tall_Exp1_6yos[1:686,]
# get the number of participants in each condition
table(D_tall_Exp1_6yos$Condition)/14
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
# CHANGE SOME OF THE COLUMN NAMES
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
# MODIFY CHOICES COLUMN
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]="Yes"
} else if(D_tall$choice[i]==0){
D_tall$choices[i]="No"
} else {
D_tall$choices[i]="Unsure"
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_6yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_6yos = subset(D_tall, ! Age %in% c("4","5"))
D_tall_Exp1_6yos$Age = factor(D_tall_Exp1_6yos$Age)
D_tall_Exp1_6yos$Experiment = factor(D_tall_Exp1_6yos$Experiment)
dim(D_tall_Exp1_6yos)
D_tall_Exp1_6yos = D_tall_Exp1_6yos[1:686,]
# get the number of participants in each condition
table(D_tall_Exp1_6yos$Condition)/14
D_tall$choice
fix(D_tall)
fix(D_tall)
fix(D_tall)
fix(D_tall)
M$A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
<<<<<<< HEAD
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),]
=======
D$A.MAIN.SUM = D$MAIN_1_A + D$MAIN_2_A
D$B.MAIN.SUM = D$MAIN_1_B + D$MAIN_2_B
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
D$CTRL_1_A + D$CTRL_2_A
D$A.CTRL.SUM = D$CTRL_1_A + D$CTRL_2_A
D$B.CTRL.SUM = D$CTRL_1_B + D$CTRL_2_B
D$C.CTRL.SUM = D$CTRL_1_C + D$CTRL_2_C
D$D.CTRL.SUM = D$CTRL_1_D + D$CTRL_2_D
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2_C
D$MAIN_1_C + D$MAIN_2_C
D$MAIN_2_C
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D$MAIN_1_C + D$MAIN_2_C
names(D)
D$C.MAIN.SUM = D$MAIN_1_C + D$MAIN_2__C
rm(list=ls())
# LOAD ALL RELEVANT LIBRARIES:
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove E columns
D$CTRL_1__E = NULL
D$CTRL_2__E = NULL
names(D)
D_tall =  reshape(D, varying = c(9:22), v.names = "measure",
timevar = "condition",   direction = "long")
D_tall = D_tall[order(D_tall$ID),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
D_tall$trialType = rep(c("control","control","control","control","control","control","control",
"control","main","main",
"main","main","main","main"), times = 94)
D_tall$testPhase = rep(c("first","first","first","first","second","second","second","second",
"first","first","first","second","second","second"), times = 94)
D_tall$objectType = rep(c("A","B","C","D",
"A","B","C","D",
"A","B","C",
"A","B","C"), times = 94)
D_tall$phaseOrder = rep(c("Phase 1","Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2","Phase 2",
"Phase 1","Phase 1","Phase 1",
"Phase 2","Phase 2","Phase 2"), times = 94)
# remove unnecessary columns
D_tall$id = NULL
<<<<<<< HEAD
=======
# CHANGE SOME OF THE COLUMN NAMES
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
names(D_tall)
colnames(D_tall)[which(names(D_tall) == "AGE.Y.")] <- "Age"
colnames(D_tall)[which(names(D_tall) == "SEX")] <- "Sex"
colnames(D_tall)[which(names(D_tall) == "CONDITION")] <- "Experiment"
colnames(D_tall)[which(names(D_tall) == "BB.IS")] <- "Condition"
colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "SubCondition"
colnames(D_tall)[which(names(D_tall) == "VIDORDER")] <- "Vidorder"
colnames(D_tall)[which(names(D_tall) == "PRETEST")] <- "Pretest"
colnames(D_tall)[which(names(D_tall) == "measure")] <- "choice"
# colnames(D_tall)[which(names(D_tall) == "SUBCONDITION")] <- "Subcondition"
names(D_tall)
<<<<<<< HEAD
=======
# MODIFY CHOICES COLUMN
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
D_tall$choices = rep(0, nrow(D_tall))
for(i in 1:nrow(D_tall)){
if(is.na(D_tall$choice[i])==T|D_tall$choice[i]=="NaN"){
D_tall$choices[i]= NA
} else if(D_tall$choice[i]==1){
D_tall$choices[i]=1
} else if(D_tall$choice[i]==0){
D_tall$choices[i]=0
} else {
D_tall$choices[i]="Unsure"
}
}
D_tall$choice = D_tall$choices
D_tall$choices = NULL
D_tall$choice = as.factor(D_tall$choice)
<<<<<<< HEAD
=======
# get counts for choice
table(D_tall$choice)
# RENAME LEVELS OF COLUMNS
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
D_tall$Condition = revalue(x = as.factor(D_tall$Condition),
c("0" = "BB", "1"="ISO"))
D_tall$Sex = revalue(x = as.factor(D_tall$Sex),
c("0" = "female", "1"="male"))
# D_tall$Subcondition = revalue(x = as.factor(D_tall$Subcondition),
#                     c("0" = "A", "1"="B", "2"="C", "3"="D"))
D_tall$Vidorder = revalue(x = as.factor(D_tall$Vidorder),
c("0" = "LtoR", "1"="RtoL"))
D_tall$Pretest = revalue(x = as.factor(D_tall$Pretest),
c("0" = "Incorrect", "1"="Correct"))
D_tall$Experiment = revalue(x = as.factor(D_tall$Experiment),
c("0" = "Experiment 1", "1"="Experiment 1",
"2" = "Experiment 2"))
D_tall$Age = as.factor(D_tall$Age)
D_tall$testPhase = as.factor(D_tall$testPhase)
D_tall$objectType = as.factor(D_tall$objectType)
D_tall$trialType = as.factor(D_tall$trialType)
D_tall$Experiment = as.factor(D_tall$Experiment)
# REODRDER COLUMNS
D_tall$condition = NULL
names(D_tall)
D_tall = as.data.frame(D_tall[,c(1:3,6,5,7,4,10,11,12,13,9,8)])
fix(D_tall)
# subset dataframes by experiments
D_tall_Exp1_6yos = subset(D_tall, ! Experiment %in% c("Experiment 2"))
D_tall_Exp1_6yos = subset(D_tall, ! Age %in% c("4","5"))
D_tall_Exp1_6yos$Age = factor(D_tall_Exp1_6yos$Age)
D_tall_Exp1_6yos$Experiment = factor(D_tall_Exp1_6yos$Experiment)
dim(D_tall_Exp1_6yos)
D_tall_Exp1_6yos = D_tall_Exp1_6yos[1:686,]
# get the number of participants in each condition
table(D_tall_Exp1_6yos$Condition)/14
<<<<<<< HEAD
M$A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]
A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
A.BB.MAIN.SUM = D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]+D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
rowSums(D[,c(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"],
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])], na.rm=TRUE)
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]
A.BB.MAIN.SUM = as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"])
A.BB.MAIN.SUM
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])
D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"]
as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])
(as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]))-2
=======
A.BB.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]))-2
length(A.BB.MAIN.SUM)
B.BB.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"]))-2
length(B.BB.MAIN.SUM)
C.BB.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"]))-2
length(C.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM)
mean(A.BB.MAIN.SUM, na.rm=TRUE)
mean(B.BB.MAIN.SUM, na.rm=TRUE)
mean(C.BB.MAIN.SUM, na.rm=TRUE)
A.BB.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"]))-2
length(A.BB.CONTROL.SUM)
mean(A.BB.CONTROL.SUM, na.rm=TRUE)
B.BB.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"]))-2
length(B.BB.CONTROL.SUM)
mean(B.BB.CONTROL.SUM, na.rm=TRUE)
C.BB.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"]))-2
length(C.BB.CONTROL.SUM)
mean(C.BB.CONTROL.SUM, na.rm=TRUE)
D.BB.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="BB" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"]))-2
length(D.BB.CONTROL.SUM)
mean(D.BB.CONTROL.SUM, na.rm=TRUE)
A.ISO.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="A"]))-2
length(A.ISO.MAIN.SUM)
mean(A.ISO.MAIN.SUM, na.rm=TRUE)
B.ISO.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="B"]))-2
length(B.ISO.MAIN.SUM)
mean(B.ISO.MAIN.SUM, na.rm=TRUE)
C.ISO.MAIN.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="main" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="main" & D_tall$objectType=="C"]))-2
length(C.ISO.MAIN.SUM)
mean(C.ISO.MAIN.SUM, na.rm=TRUE)
D.ISO.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="D"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="D"]))-2
length(D.ISO.CONTROL.SUM)
mean(D.ISO.CONTROL.SUM, na.rm=TRUE)
C.ISO.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="C"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="C"]))-2
length(C.ISO.CONTROL.SUM)
mean(C.ISO.CONTROL.SUM, na.rm=TRUE)
B.ISO.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="B"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="B"]))-2
length(B.ISO.CONTROL.SUM)
mean(B.ISO.CONTROL.SUM, na.rm=TRUE)
A.ISO.CONTROL.SUM = (as.integer(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder == "Phase 1" & D_tall$trialType=="control" & D_tall$objectType=="A"])+
as.numeric(D_tall$choice[D_tall$Condition=="ISO" & D_tall$phaseOrder=="Phase 2" & D_tall$trialType=="control" & D_tall$objectType=="A"]))-2
length(A.ISO.CONTROL.SUM)
mean(A.ISO.CONTROL.SUM, na.rm=TRUE)
>>>>>>> 45f335df6e7345268f1416445bcf1d6cfb8c1963
